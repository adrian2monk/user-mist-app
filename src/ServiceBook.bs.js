// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as DateFns from "date-fns";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Locale from "date-fns/locale";

import './ServiceBook.css';
;

function ServiceBook(Props) {
  var match = React.useState(function () {
        return new Date();
      });
  var date = match[0];
  var esOptions = {
    locale: Locale.es
  };
  var month = DateFns.format(date, "MMMM y", esOptions);
  var start = DateFns.startOfMonth(date);
  var startClass = DateFns.isSunday(start) ? "Day-sun" : (
      DateFns.isMonday(start) ? "Day-mon" : (
          DateFns.isTuesday(start) ? "Day-tue" : (
              DateFns.isWednesday(start) ? "Day-wed" : (
                  DateFns.isThursday(start) ? "Day-thu" : (
                      DateFns.isFriday(start) ? "Day-fri" : (
                          DateFns.isSaturday(start) ? "Day-sat" : ""
                        )
                    )
                )
            )
        )
    );
  var dowClass = function (d) {
    var dowStart = Caml_obj.caml_equal(d, start) ? startClass : "";
    if (DateFns.getDayOfYear(d) === DateFns.getDayOfYear(date) && dowStart !== "") {
      return dowStart + " Day-selected";
    } else if (DateFns.getDayOfYear(d) === DateFns.getDayOfYear(date)) {
      return "Day-selected";
    } else {
      return dowStart;
    }
  };
  var days = Belt_Array.makeByU(DateFns.getDaysInMonth(date), (function (i) {
          return DateFns.addDays(start, i);
        }));
  return React.createElement("main", {
              className: "Book"
            }, React.createElement("article", {
                  className: "Book-card"
                }, React.createElement("aside", undefined, "Service preview and input data"), React.createElement("section", {
                      className: "Calendar"
                    }, React.createElement("h3", {
                          className: "Calendar-month"
                        }, month.charAt(0).toUpperCase() + month.slice(1)), React.createElement("div", {
                          className: "Calendar-dow"
                        }, React.createElement("div", undefined, "Su"), React.createElement("div", undefined, "Mo"), React.createElement("div", undefined, "Tu"), React.createElement("div", undefined, "We"), React.createElement("div", undefined, "Th"), React.createElement("div", undefined, "Fr"), React.createElement("div", undefined, "Sa")), React.createElement("div", {
                          className: "Calendar-grid"
                        }, Belt_Array.map(days, (function (d) {
                                return React.createElement("button", {
                                            key: DateFns.getDayOfYear(d).toString(),
                                            className: dowClass(d)
                                          }, React.createElement("time", {
                                                dateTime: DateFns.format(d, "y-MM-dd", esOptions)
                                              }, DateFns.format(d, "d", esOptions)));
                              })))), React.createElement("aside", undefined, "Available spots"), React.createElement("footer", undefined, "Comfirmation")));
}

var make = ServiceBook;

export {
  make ,
  
}
/*  Not a pure module */

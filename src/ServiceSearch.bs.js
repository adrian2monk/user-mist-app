// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import FuseJs from "fuse.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Firestore from "firebase/firestore";
import * as RescriptReactRouter from "@rescript/react/src/RescriptReactRouter.bs.js";

import './ServiceSearch.css';
;

var currencySettings = Intl.NumberFormat("es-CO", {
      style: "currency",
      currency: "COP"
    });

function currency(param) {
  return currencySettings.format(param);
}

function ServiceSearch$ServiceTile(Props) {
  var item = Props.item;
  var duration = item.duration < 60 ? String(item.duration) + "m" : String(item.duration / 60 | 0) + "h";
  var onClick = function (param) {
    return RescriptReactRouter.push("/service/" + item.id + "/booking");
  };
  return React.createElement("article", {
              className: "Service",
              onClick: onClick
            }, React.createElement("figure", {
                  className: "Service-author"
                }, React.createElement("img", {
                      alt: "Expert Picture Url",
                      src: item.expert.picture_url
                    })), React.createElement("h2", undefined, item.expert.name), React.createElement("p", undefined, item.desc), React.createElement("p", {
                  className: "Service-label"
                }, "Tiempo " + duration), React.createElement("footer", undefined, React.createElement("p", {
                      className: "Service-price"
                    }, "Desde " + currencySettings.format(item.price / 100.0))));
}

var ServiceTile = {
  make: ServiceSearch$ServiceTile
};

function ServiceSearch(Props) {
  var match = React.useState(function () {
        return [];
      });
  var setAll = match[1];
  var all = match[0];
  var match$1 = React.useState(function () {
        return /* Empty */0;
      });
  var setHits = match$1[1];
  var hits = match$1[0];
  var db = Firestore.getFirestore();
  var onChange = function (e) {
    var q = e.target.value;
    if (q === "") {
      return Curry._1(setHits, (function (param) {
                    return /* Empty */0;
                  }));
    }
    var options = {
      includeScore: true,
      keys: [
        "categories",
        "desc",
        "expert.name"
      ]
    };
    var f = new FuseJs(all, options);
    var h = f.search(q);
    return Curry._1(setHits, (function (param) {
                  return /* Filtered */{
                          _0: Belt_Array.map(h, (function (o) {
                                  return o.item;
                                }))
                        };
                }));
  };
  var searchHits = hits ? hits._0 : all;
  React.useEffect((function () {
          Firestore.getDocs(Firestore.collection(db, "services")).then(function (querySnapshot) {
                if (!querySnapshot.empty) {
                  var results = Belt_Array.map(querySnapshot.docs, (function (d) {
                          var data = d.data({
                                serverTimestamps: "none"
                              });
                          return {
                                  categories: data.categories,
                                  expert: data.expert,
                                  desc: data.desc,
                                  duration: data.duration,
                                  type_: data.type_,
                                  price: data.price,
                                  id: d.id
                                };
                        }));
                  Curry._1(setAll, (function (param) {
                          return results;
                        }));
                }
                return Promise.resolve(undefined);
              });
          
        }), []);
  return React.createElement("main", {
              className: "App"
            }, React.createElement("header", {
                  className: "App-header"
                }, React.createElement("input", {
                      type: "search",
                      onChange: onChange
                    })), React.createElement("article", {
                  className: "App-results"
                }, Belt_Array.map(searchHits, (function (item) {
                        return React.createElement(ServiceSearch$ServiceTile, {
                                    item: item,
                                    key: item.id
                                  });
                      }))));
}

var make = ServiceSearch;

export {
  currencySettings ,
  currency ,
  ServiceTile ,
  make ,
  
}
/*  Not a pure module */
